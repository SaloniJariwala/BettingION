$mobile_screen: 425;
$large_mobile_screen: 575px;
$tablet_screen: 768;
$large_tablet_screen: 1024;
$display_screen: 1440;

$breakpoints: (
    small: #{$mobile_screen}px,
    medium: #{$tablet_screen}px,
    large: #{$large_tablet_screen}px,
    extra_large: #{$display_screen}px,
);

$p_font_sizes: (
    null: (
        0.9rem,
        1.8,
    ),
);

$small_p_font_size: (
    null: 0.784rem,
);

$h1_font_sizes: (
    null: (
        3.14rem,
        1.3,
    ),
);

$h2_font_sizes: (
    null: (
        1.8rem,
        1.4,
    ),
);

$h3_font_sizes: (
    null: (
        1.52rem,
        1.4,
    ),
);

$h4_font_sizes: (
    null: (
        1.24rem,
        1.4,
    ),
);

$h5_font_sizes: (
    null: (
        1rem,
        1.7,
    ),
);

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
    @each $fs-breakpoint, $fs-font-size in $fs-map {
        @if $fs-breakpoint == null {
            @include make-font-size($fs-font-size);
        } @else {
            // If $fs-font-size is a key that exists in
            // $fs-breakpoints, use the value
            @if map-has-key($fs-breakpoints, $fs-breakpoint) {
                $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
            }
            @media screen and (min-width: $fs-breakpoint) {
                @include make-font-size($fs-font-size);
            }
        }
    }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
    // If $fs-font-size is a list, include
    // both font-size and line-height
    @if type-of($fs-font-size) == "list" {
        font-size: nth($fs-font-size, 1);
        @if (length($fs-font-size) > 1) {
            line-height: nth($fs-font-size, 2);
        }
    } @else {
        font-size: $fs-font-size;
    }
}
